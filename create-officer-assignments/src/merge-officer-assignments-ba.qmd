---
title: "Ba et al. 2021 - Merge Officers To Their Shift Assignments"
format: pdf
---

```{r, include = F}
library(knitr)
opts_chunk$set(message = F, echo = F, warning = F)

library(here)
source(here("functions.R"))

read_path <- paste("create-officer-assignments", "input", sep = "/")
write_path <- paste("create-officer-assignments", "output", sep = "/")

officers <- my_read_csv(here(read_path, "officers.csv"))

assignments <- my_read_csv(here(read_path, "assignments.csv"))

assignments <-
    assignments %>%
    mutate(shift_id = as.character(row_number()),
           start_date = if_else(is.na(start_time), NA_Date_, date),
           start_hms = hms::hms(rep(0, nrow(assignments)),
                                rep(0, nrow(assignments)),
                                start_time),
           start_datetime = as_datetime(paste0(start_date, " ", start_hms)),
           end_date = case_when(is.na(end_time) ~ NA_Date_,
                                end_time > 24 ~ date + 1,
                                TRUE ~ date),
           end_hms = hms::hms(rep(0, nrow(assignments)),
                              rep(0, nrow(assignments)),
                              case_when(is.na(end_time) ~ NA_real_,
                                        end_time > 24 ~ end_time - 24,
                                        TRUE ~ end_time)),
           end_datetime = as_datetime(paste0(end_date, " ", end_hms))) %>%
    select(-start_date, -start_hms, -end_date, -end_hms, -appointed_month)
```

```{r}
officer_assignments <- inner_join(assignments, officers, by = "officer_id")

# drop all but POLICE OFFICER
rank_fltr <- officer_assignments %>% filter(rank == 'POLICE OFFICER')

# drop all officers except black, Hispanic, and white
race_fltr <-
    officer_assignments %>%
    filter(officer_race %in% paste0('officer_',  c('black', 'white', 'hisp')))

# final data set
officer_assignments_ba <-
    officer_assignments %>%
    filter(officer_race %in% c(paste0("officer_", c("white", "black", "hisp"))),
           rank == "POLICE OFFICER")

write_csv(officer_assignments_ba,
          here(write_path, "officers_assignments_ba.csv"))
```

## Filtering - Ba et al. 2021

> "Within this subset, we further drop non-standard assignments (notably including “protest detail,” “station supervisor,” and “station security” assignments, as well as special assignments for training, compensatory time, and excused sick leave). Patrol assignments in which officers are indicated as non-present are also dropped... we drop double shifts (patrol assignment slots in which the assigned officer served for more than one shift on the same day) to address the possibility that officers behave differently due to fatigue in these circumstances. We also eliminate officers assigned to non-standard watches (i.e., other than first through third watches)." page 7 of Appendix Section S1.4 in Ba et al. 2021.

I did not find any evidence in their code that they did this.

### Race

> "We restrict analysis to patrol assignments in which Black, Hispanic, or White officers serve. Asian/Pacific Islander and Native American/Alaskan Native officers are not examined due to small sample sizes." page 7 of Appendix Section S1.4 in Ba et al. 2021.

* Number of officer shift assignments: `r nrow(race_fltr)`
    * Shifts dropped: `r nrow(officer_assignments) - nrow(race_fltr)`
    * Percentage reduction: `r (nrow(officer_assignments) - nrow(race_fltr)) / nrow(officer_assignments) * 100`%
* Number of unique officers: `r length(unique(race_fltr$officer_id))`
    * Number Of Officers dropped: `r length(unique(officer_assignments$officer_id)) - length(unique(race_fltr$officer_id))`
    * Percentage reduction: `r (length(unique(officer_assignments$officer_id)) - length(unique(race_fltr$officer_id))) / length(unique(officer_assignments$officer_id)) * 100`%
    
### Rank

> "Finally, we drop officers at ranks other than 'police officer.' This step eliminates police sergeants, who serve in 8% of beat assignments but make very few stops and arrests, as well as legal officers, helicopter pilots, explosives technicians, and canine handlers." page 7 of Appendix Section S1.4 in Ba et al. 2021.

* Number of officer shift assignments: `r nrow(rank_fltr)`
    * Shifts dropped: `r nrow(officer_assignments) - nrow(rank_fltr)`
    * Percentage reduction: `r (nrow(officer_assignments) - nrow(rank_fltr)) / nrow(officer_assignments) * 100`%
* Number of unique officers: `r length(unique(rank_fltr$officer_id))`
    * Officers dropped: `r length(unique(officer_assignments$officer_id)) - length(unique(rank_fltr$officer_id))`
    * Percentage reduction: `r (length(unique(officer_assignments$officer_id)) - length(unique(rank_fltr$officer_id))) / length(unique(officer_assignments$officer_id)) * 100`%
    
### Totals

Note the numbers above won't completely add up to the numbers below because of intersections.

* **Number of officer shift assignments**: `r nrow(officer_assignments_ba)`
    * Shifts dropped: `r nrow(officer_assignments) - nrow(officer_assignments_ba)`
    * Percentage reduction: `r (nrow(officer_assignments) - nrow(officer_assignments_ba)) / nrow(officer_assignments) * 100`%
* **Number of unique officers with at least one shift assignment**: `r length(unique(officer_assignments_ba$officer_id))`
    * Officers dropped: `r length(unique(officer_assignments$officer_id)) - length(unique(officer_assignments_ba$officer_id))`
    * Percentage reduction: `r (length(unique(officer_assignments$officer_id)) - length(unique(officer_assignments_ba$officer_id))) / length(unique(officer_assignments$officer_id)) * 100`%
* **Number of missings**:
    * `r table(is.na(officer_assignments_ba$duration))[["TRUE"]]` shift assignments are missing their start and end time.
        * This represents `r table(is.na(officer_assignments_ba$duration))[["TRUE"]] / nrow(officer_assignments_ba) * 100`% of all shifts.
    * `r table(is.na(officer_assignments_ba$months_from_start))[["TRUE"]]` shift assignments are missing the amount of experience of the officer.
    