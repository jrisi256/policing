---
title: "Stops Codebook"
format: pdf
---

```{r, include = F}
library(here)
library(readr)
library(dplyr)
library(purrr)
library(knitr)
library(R.utils)
library(flextable)
opts_chunk$set(message = F, echo = F, warning = F)
source(here("1_create_codebooks", "src", "generate_descriptive_tables.R"))
```

```{r}
stops <-
    read_csv(
        here("1_create_codebooks", "input", "stops.csv.gz"),
        col_types = 
            cols_only(
                stop_id = "c",
                time = col_datetime(),
                date = col_date(format = "%Y-%m-%d"),
                district = "c",
                po_first = "c",
                stop_type = "c",
                contact_type = "c",
                civ.race = "c",
                civ.gender = "c",
                civ.age = "d",
                lat = "d",
                lon = "d",
                officer_id = "c",
                month = col_date(format = "%Y-%m-%d"),
                civilian_race_short = "c",
                hour = "d"
            )
    ) %>%
    mutate(officer_stop_id = as.character(row_number()))

write_csv(stops, here("1_create_codebooks", "output", "stops_id.csv"))
gzip(here("1_create_codebooks", "output", "stops_id.csv"), overwrite = T)
```

## Stops

* **stop_id**: Identifier for each stop.
* **time**: Time of the stop in YYYY-MM-DD HH:MM:SS format.
* **date**: Date of the stop in YYYY-MM-DD format.
* **district**: Police district where the stop took place.
* **po_first**: Was the focal officer the first to respond to the scene?
* **stop_type**: What was the type of the stop?
* **contact_type**: Collapsed version of **stop_type** (less categories).
* **civ.race**: Race of the civilian.
* **civ.gender**: Sex of the civilian.
* **civ.age**: Age of the civilian at the time of the stop.
* **lat**: Latitude of the stop.
* **lon**: Longitude of the stop.
* **officer_id**: Unique identifier for the officer.
* **month**: Month of the stop in YYYY-MM-DD format. The day is always the first day of the month.
* **civilian_race_short**: Collapsed version of **civ.race** (less categories).
* **hour**: Hour of the day when the stop took place rounded to the nearest hour in military time.
* **officer_stop_id**: Column created by Risi for uniquely identifying each observation in the stop table.
* The unit of analysis is a unique officer involved in a stop. Each row can be uniquely identified by **officer_id** and **stop_id** or **officer_stop_id**.
* Each stop involves only one civilian, but they can involve multiple officers. It is possible multiple stops are all a part of one larger incident involving multiple civilians. This can be investigated by examining stops that took place in the same location at the same time involving the same officers.
* **Number of rows**: `r nrow(stops)`
* **Number of unique stops**: `r length(unique(stops$stop_id))`
* **Number of unique officers**: `r length(unique(stops$officer_id))`

### Stop Type vs. Contact Type

> "Stops for 'dispersal' and 'gang and narcotics-related loitering' are coded as loitering stops; those that are 'gang / narcotics related' are coded as drug stops; 'investigatory stops' and stops of 'suspicious persons' are coded as suspicious behavior; and stops under the 'Repeat Offender Geographic Urban Enforcement Strategy (ROGUES)' program are combined with the 'other' category." page 8 of Appendix Section S1.5 in Ba et al. 2021.

```{r}
descriptive_table_c_l <-
    stops %>%
    select((where(is.character) | where(is.logical)) & !matches("id")) %>%
    describe_columns_c_l(nmax = Inf)

flextable(descriptive_table_c_l) %>%
    align(align = "left", part = "all" ) %>%
    set_table_properties(layout = "autofit") %>%
    fontsize(size = 10, part = "all")
```

```{r}
descriptive_table_n <-
    stops %>%
    select(where(is.numeric)) %>%
    describe_columns_n()

flextable(descriptive_table_n) %>%
    align(align = "left", part = "all") %>%
    set_table_properties(layout = "autofit", opts_pdf = list(tabcolsep = 3)) %>%
    fontsize(size = 8, part = "all")
```

```{r}
descriptive_table_id <-
    stops %>%
    select(matches("id")) %>%
    describe_columns_id()

flextable(descriptive_table_id)
```

```{r}
descriptive_table_date_num <-
    stops %>%
    select(matches("time")) %>%
    describe_columns_date_num()

flextable(descriptive_table_date_num) %>%
    align(align = "left", part = "all") %>%
    set_table_properties(layout = "autofit", opts_pdf = list(tabcolsep = 3)) %>%
    fontsize(size = 7, part = "all")
```

```{r}
descriptive_table_date_category <-
    stops %>%
    select(matches("time")) %>%
    describe_columns_datetime_category()

flextable(descriptive_table_date_category) %>%
    align(align = "left", part = "all") %>%
    set_table_properties(layout = "autofit", opts_pdf = list(tabcolsep = 10))
```
