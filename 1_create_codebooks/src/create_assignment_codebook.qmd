---
title: "Work Assignments Codebook"
format: pdf
---

```{r, include = F}
library(here)
library(readr)
library(dplyr)
library(purrr)
library(knitr)
library(R.utils)
library(flextable)
opts_chunk$set(message = F, echo = F, warning = F)
source(here("1_create_codebooks", "src", "generate_descriptive_tables.R"))
```

```{r}
assignments <-
    read_csv(
        here("1_create_codebooks", "input", "assignments.csv.gz"),
        col_types = 
            cols_only(
                officer_id = "c",
                month = col_date(format = "%Y-%m-%d"),
                rank = "c",
                unit = "c",
                date = col_date(format = "%Y-%m-%d"),
                shift = "c",
                start_time = "d",
                end_time = "d",
                weekday = "c",
                beat_assigned = "c",
                months_from_start = "d",
                months_from_start_sq = "d",
                duration = "d"
            )
    ) %>%
    mutate(assignment_id = as.character(row_number()))

write_csv(assignments, here("1_create_codebooks", "output", "assignments_id.csv"))
gzip(here("1_create_codebooks", "output", "assignments_id.csv"), overwrite = T)
```

## Work Assignments

* **officer_id**: Unique identifier for each officer.
* **month**: Month of the shift in YYYY-MM-DD format. The day is always the first day of the month.
* **rank**: Rank of the officer assigned to the shift.
* **unit**: Unit of the officer assigned to the shift.
* **date**: Date of the shift in YYYY-MM-DD format.
* **shift**: The shift the officer is assigned to.
* **start_time**: Hour start time of the shift in military time.
* **end_time**: Hour end time of the shift in military time.
* **weekday**: Day of the week of the shift.
* **beat_assigned**: The beat the officer is assigned to.
* **appointed_month**: The month and year the officer was made an officer.
* **months_from_start**: The number of months between the officer's appointment date and their shift date.
* **months_from_start_sq**: The number of months between the officer's appointment date and their shift date, squared.
* **duration**: Length of the shift in hours.
* **assignment_id**: Column created by Risi for uniquely identifying each observation in the work assignment table.
* Uniquely identified by **officer_id** and **date** or **assignment_id**. The unit of observation is a specific work assignment for a specific officer.
* **Number of officer work assignments**: `r nrow(assignments)`
* **Number of unique officers**: `r length(unique(assignments$officer_id))`

```{r}
descriptive_table_c_l <-
    assignments %>%
    select((where(is.character) | where(is.logical)) & !matches("id|beat_assigned")) %>%
    describe_columns_c_l(nmax = Inf)

descriptive_table_beat_assigned <-
    assignments %>%
    select(matches("beat_assigned")) %>%
    describe_columns_c_l(nmax = 10)

flextable(bind_rows(descriptive_table_c_l, descriptive_table_beat_assigned)) %>%
    align(align = "left", part = "all" ) %>%
    set_table_properties(layout = "autofit")
```

```{r}
descriptive_table_n <-
    assignments %>%
    select(where(is.numeric)) %>%
    describe_columns_n()

flextable(descriptive_table_n) %>%
    align(align = "left", part = "all") %>%
    set_table_properties(layout = "autofit", opts_pdf = list(tabcolsep = 3)) %>%
    fontsize(size = 8, part = "all")
```

```{r}
descriptive_table_id <-
    assignments %>%
    select(matches("id")) %>%
    describe_columns_id()

flextable(descriptive_table_id) %>%
    align(align = "left", part = "all") %>%
    set_table_properties(layout = "autofit") %>%
    fontsize(size = 10, part = "all")
```

```{r}
descriptive_table_date_num <-
    assignments %>%
    select(matches("date")) %>%
    describe_columns_date_num()

flextable(descriptive_table_date_num) %>%
    align(align = "left", part = "all") %>%
    set_table_properties(layout = "autofit", opts_pdf = list(tabcolsep = 8)) %>%
    fontsize(size = 9, part = "all")
```

```{r}
descriptive_table_date_category <-
    assignments %>%
    select(matches("date")) %>%
    describe_columns_date_category()

flextable(descriptive_table_date_category) %>%
    align(align = "left", part = "all") %>%
    set_table_properties(layout = "autofit", opts_pdf = list(tabcolsep = 10))
```
