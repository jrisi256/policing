---
title: "Replicate Ba et al. 2021 - Join Officers to Work Assignments"
format: pdf
---

```{r, include = F}
library(here)
library(readr)
library(dplyr)
library(knitr)
library(stringr)
library(R.utils)
library(lubridate)
opts_chunk$set(message = F, echo = F, warning = F, output = F)
write_path <- paste("replicate_ba_et_al_2021", "output", sep = "/")
```

```{r}
# Read in police officer roster.
officers <- 
    read_csv(
        here("1_create_codebooks", "input", "officers.csv.gz"),
        col_types = 
            cols_only(
                birth_year = "d",
                appointed_month = col_date(format = "%Y-%m-%d"),
                officer_id = "c",
                officer_race = "c",
                officer_gender = "c",
                spanish = "l"
            )
        )

# Read in officer-work assignment data.
assignments <-
    read_csv(
        here("1_create_codebooks", "output", "assignments_id.csv.gz"),
        col_types = 
            cols_only(
                officer_id = "c",
                assignment_id = "c",
                month = col_date(format = "%Y-%m-%d"),
                rank = "c",
                unit = "c",
                date = col_date(format = "%Y-%m-%d"),
                shift = "c",
                start_time = "d",
                end_time = "d",
                weekday = "c",
                beat_assigned = "c",
                months_from_start = "d",
                months_from_start_sq = "d",
                duration = "d"
            )
    )
```

```{r}
assignments_ba <-
    assignments %>%
    mutate(
        start_date = if_else(is.na(start_time), NA_Date_, date),
        start_hms = hms::hms(
            rep(0, nrow(assignments)),
            rep(0, nrow(assignments)),
            start_time
        ),
        start_datetime = as_datetime(paste0(start_date, " ", start_hms)),
        end_date =
            case_when(
                is.na(end_time) ~ NA_Date_,
                end_time > 24 ~ date + 1,
                TRUE ~ date
            ),
        end_hms = hms::hms(
            rep(0, nrow(assignments)),
            rep(0, nrow(assignments)),
            case_when(
                is.na(end_time) ~ NA_real_,
                end_time > 24 ~ end_time - 24,
                TRUE ~ end_time
            )
        ),
        end_datetime = as_datetime(paste0(end_date, " ", end_hms))
    ) %>%
    select(-start_date, -start_hms, -end_date, -end_hms)
```

```{r}
# Join officer roster to officer-work assignments.
officer_assignments <- inner_join(assignments_ba, officers, by = "officer_id")
nr_officers_og <- length(unique(officer_assignments$officer_id))

# drop all but POLICE OFFICER
rank_fltr <- officer_assignments %>% filter(rank == 'POLICE OFFICER')
nr_officers_rank_fltr <- length(unique(rank_fltr$officer_id))

# drop all officers except black, Hispanic, and white
race_fltr <-
    officer_assignments %>%
    filter(officer_race %in% paste0('officer_',  c('black', 'white', 'hisp')))
nr_officers_race_fltr <- length(unique(race_fltr$officer_id))

# Final data set for Ba et al. 2021
officer_assignments_ba <-
    officer_assignments %>%
    filter(
        officer_race %in% c(paste0("officer_", c("white", "black", "hisp"))),
        rank == "POLICE OFFICER"
    )

nr_officers_final <- length(unique(officer_assignments_ba$officer_id))
nr_missing_date <- table(is.na(officer_assignments_ba$duration))[["TRUE"]]
nr_missing_exp <- table(is.na(officer_assignments_ba$months_from_start))[["TRUE"]]

# Calculate overlap
overlap <-
    officer_assignments_ba %>%
    arrange(officer_id, start_datetime) %>%
    group_by(officer_id) %>%
    mutate(
        overlap_shift_1 =
            end_datetime >= lead(start_datetime) & !is.na(lead(start_datetime)),
        overlap_shift_2 =
            start_datetime <= lag(end_datetime) & !is.na(lag(end_datetime)),
    ) %>%
    ungroup()

nr_overlap <- overlap %>% filter(overlap_shift_1 | overlap_shift_2) %>% nrow()

# Save results
write_csv(officer_assignments_ba, here(write_path, "1_officer_assignments_ba.csv"))
gzip(here(write_path, "1_officer_assignments_ba.csv"), overwrite = T)
```

## Join the officer roster to work assignments - Ba et al. 2021

### Pre-filtering totals

* **Number of officers**: `r nr_officers_og`
* **Number of officer-work assignments**: `r nrow(officer_assignments)`

### Filtering by work assignment

> "Within this subset, we further drop non-standard assignments (notably including “protest detail,” “station supervisor,” and “station security” assignments, as well as special assignments for training, compensatory time, and excused sick leave). Patrol assignments in which officers are indicated as non-present are also dropped... we drop double shifts (patrol assignment slots in which the assigned officer served for more than one shift on the same day) to address the possibility that officers behave differently due to fatigue in these circumstances. We also eliminate officers assigned to non-standard watches (i.e., other than first through third watches)." page 7 of Appendix Section S1.4 in Ba et al. 2021.

I did not find any evidence in their code that they did this.

### Filtering by race/ethnicity

> "We restrict analysis to patrol assignments in which Black, Hispanic, or White officers serve. Asian/Pacific Islander and Native American/Alaskan Native officers are not examined due to small sample sizes." page 7 of Appendix Section S1.4 in Ba et al. 2021.

* Number of officer-work assignments: `r nrow(race_fltr)`
    * Officer-work assignments dropped: `r nrow(officer_assignments) - nrow(race_fltr)`
    * Percentage reduction: `r round((nrow(officer_assignments) - nrow(race_fltr)) / nrow(officer_assignments) * 100, 3)`%
* Number of unique officers: `r nr_officers_race_fltr`
    * Number Of Officers dropped: `r nr_officers_og - nr_officers_race_fltr`
    * Percentage reduction: `r round((nr_officers_og - nr_officers_race_fltr) / nr_officers_og * 100, 3)`%

### Filtering by rank

> "Finally, we drop officers at ranks other than 'police officer.' This step eliminates police sergeants, who serve in 8% of beat assignments but make very few stops and arrests, as well as legal officers, helicopter pilots, explosives technicians, and canine handlers." page 7 of Appendix Section S1.4 in Ba et al. 2021.

* Number of officer-work assignments: `r nrow(rank_fltr)`
    * Officer-work assignments dropped: `r nrow(officer_assignments) - nrow(rank_fltr)`
    * Percentage reduction: `r round((nrow(officer_assignments) - nrow(rank_fltr)) / nrow(officer_assignments) * 100, 3)`%
* Number of unique officers: `r nr_officers_rank_fltr`
    * Officers dropped: `r nr_officers_og - nr_officers_rank_fltr`
    * Percentage reduction: `r round((nr_officers_og - nr_officers_rank_fltr) / nr_officers_og * 100, 3)`%

### Final results

* **Number of officers**: `r nr_officers_final`
    * **Number of officers dropped**: `r nr_officers_og - nr_officers_final`
    * **Percentage reduction**: `r round((nr_officers_og - nr_officers_final) / nr_officers_final * 100, 3)`%
* **Number of officer-work assignments**: `r nrow(officer_assignments_ba)`
    * **Number of assignments dropped**: `r nrow(officer_assignments) - nrow(officer_assignments_ba)`
    * **Percentage reduction**: `r round((nrow(officer_assignments) - nrow(officer_assignments_ba)) / nrow(officer_assignments) * 100, 3)`%

#### Missings and overlap

* `r nr_missing_date` (`r round(nr_missing_date / nrow(officer_assignments_ba) * 100, 2)`%) officer-work assignments are missing their start and end time.
* `r nr_missing_exp` (`r round(nr_missing_exp / nrow(officer_assignments_ba) * 100, 2)`%) officer-work assignments are missing the work experience of the officer. This is due to a data error where the officer's appointment date is **AFTER** their work assignment date. I.e., they began working before they were officially a police officer.
* `r nr_overlap` (`r round(nr_overlap / nrow(officer_assignments_ba) * 100, 2)`%) officer-work assignments overlap. To give an example, officer 1 was assigned work assignment 1 on January 1, 2012 from 12am to 8am. They were also assigned work assignment 2 on January 1, 2012 from 6am to 2pm. Both of these officer's work assignments are counted as overlapping (with each other).
